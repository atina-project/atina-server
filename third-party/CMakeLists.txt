set(HTTPLIB_COMPILE ON)
set(HTTPLIB_INSTALL OFF)
set(HTTPLIB_INSTALL_LIB_ONLY ON)
set(HTTPLIB_INSTALL_LIB_PATH ${ATINA_SERVER_INSTALL_DIR})
set(HTTPLIB_REQUIRE_OPENSSL ON)
add_subdirectory(cpp-httplib)
set(HTTPLIB_INCLUDE_DIR "${HTTPLIB_SPLITED_INCLUDE_DIR}" CACHE INTERNAL "${HTTPLIB_SPLITED_INCLUDE_DIR}")

set(HYPODERMIC_COPY_HEADER_TO_BINARY_DIR ON)
set(HYPODERMIC_NO_INSTALL ON)
set(HYPODERMIC_NO_TEST ON)
add_subdirectory(Hypodermic)
set(HYPODERMIC_INCLUDE_DIR "${CMAKE_CURRENT_BINARY_DIR}/Hypodermic/Hypodermic/include" CACHE INTERNAL "${CMAKE_CURRENT_BINARY_DIR}/Hypodermic/Hypodermic/include")

set(JSONCPP_WITH_TESTS OFF)
set(JSONCPP_WITH_PKGCONFIG_SUPPORT OFF)
set(JSONCPP_WITH_CMAKE_PACKAGE OFF)
set(BUILD_STATIC_LIBS OFF)
set(BUILD_OBJECT_LIBS OFF)
set(JSONCPP_INSTALL_LIBS_ONLY ON)
set(JSONCPP_INSTALL_LIB_PATH ${ATINA_SERVER_INSTALL_DIR})
add_subdirectory(jsoncpp)
set(JSONCPP_INCLUDE_DIR "${CMAKE_CURRENT_SOURCE_DIR}/jsoncpp/include" CACHE INTERNAL "${CMAKE_CURRENT_SOURCE_DIR}/jsoncpp/include")

set(WCDB_INCLUDE_DIR "${CMAKE_CURRENT_BINARY_DIR}/wcdb/src/export_headers" CACHE INTERNAL "${CMAKE_CURRENT_BINARY_DIR}/wcdb/src/export_headers")
add_subdirectory(wcdb/src)
